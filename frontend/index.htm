<!doctype html>
<html class="no-js" lang="">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="x-ua-compatible" content="ie=edge">
    <title>MiniVan Keyboard Layout Configurator</title>
    <meta name="description" content="">
    <meta name="viewport" content="width=device-width, initial-scale=1">

    <link rel="stylesheet" type="text/css" href="style.css">
  </head>
  <body>
    <div id="container">
      <form name="keyboard-form" id="keyboard-form" action="" method="post" enctype="multipart/form-data">
        <div v-for="(keyboardIndex, keyboard) in template" class="keyboards">
          <div class="keyboard">
            <div v-for="(rowIndex, row) in layout" class="row">
              <div
                v-for="(keyIndex, key) in row"
                class="keyboard--key--container keyboard--key--container__{{ key }}"
                v-bind:class="{ 'keyboard--key--container__toggle': keyboard[rowIndex][keyIndex].type == 'toggle', 'keyboard--key--container__momentary': keyboard[rowIndex][keyIndex].type == 'momentary'}"
                v-on:contextmenu="showMenu"
              >
                <input
                  class="keyboard--key"
                  name="L3"
                  type="text"
                  v-model="keyboard[rowIndex][keyIndex].value"
                  v-on:blur="hideMenu"
                  v-on:keyup="hideMenu"
                >
              </div>
            </div>
          </div>
        </div>
      </form>
    </div>

    <div id="key-list">
      Key list menu
    </div>



    <script src="https://cdnjs.cloudflare.com/ajax/libs/vue/1.0.26/vue.min.js"></script>
    <script src="main.js"></script>
    <script>
    cumulativeOffset = function(element) {
      var top = element.offsetHeight,
        left = 0;

      do {
        top += element.offsetTop  || 0;
        left += element.offsetLeft || 0;
        element = element.offsetParent;
      } while(element);

      return {
        top: top,
        left: left
      };
    };

    var v = new Vue({
      el: '#keyboard-form',
      data: {
        layout: layouts[0]['keys'],
        template: templates[0]['keys']
      },
      methods: {
        showMenu: function(event) {
          event.preventDefault();

          var key = event.srcElement;
          var position = cumulativeOffset(key);

          document.getElementById('key-list').style.top = position.top + 'px';
          document.getElementById('key-list').style.left = position.left + 'px';
          document.getElementById('key-list').style.display = 'block';
        },
        hideMenu: function(event) {
          document.getElementById('key-list').style.display = 'none';
        }
      }
    });
    </script>
  </body>
</html>